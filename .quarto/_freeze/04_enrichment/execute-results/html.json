{
  "hash": "8b3146d2ec5f62c7332b6a3ec1c5130b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"4: Data enrichment\"\n---\n\nPrimarily, we enrich our data by obtaining certain metrics from the current data.\n\nOur dataset is enhanced by adding additional information obtained from the existing data.\n\nText Summarization: For each article in our dataset, we utilize an LLM (Language Model) based text summarization method. This method condenses the content of each article into a concise summary consisting of two sentences. The resulting summaries are stored in a new column named \"article_summary\".\n\nSentiment Analysis: We employ LLMs to analyze the sentiment expressed in both the news headlines and the article summaries.\n  -Sentiment Categories: The sentiment analysis categorizes the sentiment into three main categories: \"Positive\", \"Negative\", and \"Neutral\".\n  -Storing Results: The sentiment analysis results for the article summaries are stored in new columns named \"article_summary_sentiment\", while the sentiment analysis results for the headlines are stored in new columns named \"headline_sentiment\".\n\nEmotion Analysis: Similarly, we utilize LLMs to analyze the emotions conveyed in both the news headlines and the article summaries.\n  -Emotion Classes: The emotion analysis classifies emotions into six distinct classes: \"Anger\", \"Sadness\", \"Joy\", \"Surprise\", \"Love\", and \"Disgust\".\n  -Storing Results: The emotion analysis results for the article summaries are stored in new columns named \"article_summary_emotion\", while the emotion analysis results for the headlines are stored in new columns named \"headline_emotion\".\n\nBy performing text summarization, sentiment analysis, and emotion analysis using LLMs, we enrich our dataset with valuable insights into the sentiments and emotions conveyed in the news headlines and article summaries. These enriched features provide a deeper understanding of the content and help facilitate further analysis and interpretation of the data.\n\n```python\nfrom transformers import pipeline\nimport pandas as pd\n\n# Load your data\ndf = pd.read_csv('/content/cleaned_and_filtered.csv')\n\n# Load the sentiment and emotion pipelines\nsentiment_analysis = pipeline(\"sentiment-analysis\", model=\"cardiffnlp/twitter-roberta-base-sentiment\", device=0)  # device -1 for CPU\nemotion_analysis = pipeline(\"text-classification\", model=\"bhadresh-savani/distilbert-base-uncased-emotion\", device=0)\n\n# Function to apply the model in batches\ndef apply_model_in_batches(model, texts, batch_size=100):\n    results = []\n    for i in range(0, len(texts), batch_size):\n        batch = texts[i:i + batch_size]\n        results.extend(model(batch))\n    return results\n\n# Apply sentiment analysis in batches\nsentiment_results = apply_model_in_batches(sentiment_analysis, df['TITLE'].tolist())\ndf['sentiment'] = [result['label'] for result in sentiment_results]\ndf['sentiment_score'] = [result['score'] for result in sentiment_results]\n\n# Apply emotion analysis in batches\nemotion_results = apply_model_in_batches(emotion_analysis, df['TITLE'].tolist())\ndf['emotion'] = [result['label'] for result in emotion_results]\ndf['emotion_score'] = [result['score'] for result in emotion_results]\n\ndef label_to_sentiment(label):\n    mapping = {\n        'LABEL_0': 'negative',\n        'LABEL_1': 'neutral',\n        'LABEL_2': 'positive'\n    }\n    return mapping.get(label, 'unknown')  # Return 'unknown' if the label is not recognized\n\n# Apply the function to the 'sentiment' column\ndf['sentiment'] = df['sentiment'].apply(label_to_sentiment)\n\n# Optionally save the updated DataFrame back to a CSV\ndf.to_csv('main.csv', index=False)\n\n# Print the head of the DataFrame to verify changes\n\n```\n\n::: {#428f9618 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\ndf=pd.read_csv('main.csv')\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>DATE</th>\n      <th>AUTHOR</th>\n      <th>TITLE</th>\n      <th>cleaned</th>\n      <th>sentiment</th>\n      <th>sentiment_score</th>\n      <th>emotion</th>\n      <th>emotion_score</th>\n      <th>ARTICLE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>205074</td>\n      <td>2019-06-29</td>\n      <td>Field Level Media</td>\n      <td>Sanchez, Nationals shut down Tigers</td>\n      <td>Sanchez , Nationals shut tiger</td>\n      <td>neutral</td>\n      <td>0.892794</td>\n      <td>anger</td>\n      <td>0.772276</td>\n      <td>Anibal Sanchez pitched six strong innings Frid...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>205655</td>\n      <td>2019-06-11</td>\n      <td>Field Level Media</td>\n      <td>Rays top A's as Morton's unbeaten streak hits 21</td>\n      <td>ray Morton unbeaten streak hit 21</td>\n      <td>neutral</td>\n      <td>0.626775</td>\n      <td>joy</td>\n      <td>0.990553</td>\n      <td>Aided by three home runs, right-hander Charlie...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>205885</td>\n      <td>2019-06-15</td>\n      <td>Field Level Media</td>\n      <td>Jimenez, White Sox crush Sabathia, Yankees</td>\n      <td>Jimenez , White Sox crush Sabathia , Yankees</td>\n      <td>neutral</td>\n      <td>0.899590</td>\n      <td>anger</td>\n      <td>0.657171</td>\n      <td>EditorsNote: Changed stat ‘eight runs’ to ‘fiv...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>206081</td>\n      <td>2019-06-15</td>\n      <td>Field Level Media</td>\n      <td>Giants crack three homers, down Brewers</td>\n      <td>giant crack homer , brewer</td>\n      <td>neutral</td>\n      <td>0.829722</td>\n      <td>anger</td>\n      <td>0.467322</td>\n      <td>Kevin Pillar had three hits and drove in the t...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>206131</td>\n      <td>2019-06-19</td>\n      <td>Field Level Media</td>\n      <td>A's crack six homers, obliterate Orioles</td>\n      <td>crack homer , obliterate Orioles</td>\n      <td>neutral</td>\n      <td>0.706669</td>\n      <td>anger</td>\n      <td>0.490198</td>\n      <td>Beau Taylor triggered a six-homer assault on B...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "04_enrichment_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}