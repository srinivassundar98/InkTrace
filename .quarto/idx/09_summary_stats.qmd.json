{"title":"9: Summary statistics","markdown":{"yaml":{"title":"9: Summary statistics"},"headingText":"Histogram of Word Counts","containsRefs":false,"markdown":"\nHistograms of Word and Character Counts\nThese histograms reveal the typical lengths of words and characters per segment (likely per article or sentence), showing a concentration in certain ranges. This data can be used to assess the complexity or readability of the content.\n\n\nThis code segment loads text data, calculates word and character counts, and visualizes the distribution of word counts across documents. The histogram of word counts allows us to assess the verbosity or conciseness of the entries in the dataset.\n\n```{python}\nimport pandas as pd\nimport plotly.express as px\n\n# Load the dataset\ndata = pd.read_csv('main.csv')\n\n# Assuming the main text is in a column named 'cleaned'\n# Calculate word count and character count\ndata['word_count'] = data['cleaned'].apply(lambda x: len(str(x).split()))\ndata['char_count'] = data['cleaned'].apply(lambda x: len(str(x)))\n\n# Plotting histograms using Plotly Express\nfig_word_count = px.histogram(data, x='word_count',\n                              title='Histogram of Word Counts',\n                              labels={'word_count': 'Word Count'},\n                              color_discrete_sequence=['skyblue'],\n                              template='plotly_white',\n                              nbins=30)\nfig_word_count.update_layout(bargap=0)\nfig_word_count.show()\n\n```\n\n## Histogram of Character Counts\n\nThis code generates a histogram to visualize the distribution of character counts in the dataset. The visualization helps identify the common length of entries and any outliers, using a clear and concise histogram format.\n\n```{python}\n\nfig_char_count = px.histogram(data, x='char_count',\n                              title='Histogram of Character Counts',\n                              labels={'char_count': 'Character Count'},\n                              color_discrete_sequence=['lightgreen'],\n                              template='plotly_white',\n                              nbins=30)\nfig_char_count.update_layout(bargap=0)\nfig_char_count.show()\n```\n\nPOS Tag Frequencies\nNoun and Verb Tags: High frequency of nouns and verbs highlights a descriptive or action-oriented language style in the dataset, which could be pivotal for natural language processing applications like topic modeling or sentiment analysis.\n\nAdjective and Adverb Tags: Lower frequencies suggest a more factual or straightforward reporting style rather than descriptive or evaluative, which might influence the type of content produced.\n\n## Visualization of POS Tag Frequencies\n\nThis script loads textual data, utilizes the NLTK library to extract and count Part-of-Speech tags, and generates histograms for each POS tag type to analyze their frequencies. The visualizations offer insights into the linguistic structure of the texts.\n\n```{python}\nimport pandas as pd\nimport nltk\nfrom nltk import pos_tag, word_tokenize\nfrom collections import Counter\nimport plotly.express as px\n\n# Ensure necessary resources are downloaded\nnltk.download('averaged_perceptron_tagger')\nnltk.download('punkt')\n\n# Load the dataset\ndata = pd.read_csv('main.csv')\n\ndef get_pos_tags(texts, tagset='universal'):\n    df_list = []  # List to store each row DataFrame\n    # Iterate over each text item\n    for text in texts:\n        pos_tags = Counter([tag for _, tag in pos_tag(word_tokenize(text), tagset=tagset)])\n        # Create a DataFrame for current text's POS tags and add to list\n        df_list.append(pd.DataFrame([pos_tags]))\n    # Concatenate all DataFrames in the list into a single DataFrame\n    df = pd.concat(df_list, ignore_index=True)\n    df = df.fillna(0).astype(int)\n    return df\n\n# Extract POS tags for the 'cleaned' column\ndf_tags = get_pos_tags(data['cleaned'])\n\n# Plotting each POS tag frequency using Plotly\ndef plot_pos_histograms(df):\n    for column in df.columns:\n        \n        fig = px.histogram(df, x=column, title=f'Histogram of {column} Tags',\n                           labels={column: f'Count of {column}'}, \n                           template='plotly_white', nbins=8)\n        fig.update_traces(marker_color='turquoise', marker_line_width=1.5)\n        fig.update_layout(bargap=0)  # Update bargap to 0 for no gaps\n        \n        fig.show()\n\nplot_pos_histograms(df_tags)\n```","srcMarkdownNoYaml":"\nHistograms of Word and Character Counts\nThese histograms reveal the typical lengths of words and characters per segment (likely per article or sentence), showing a concentration in certain ranges. This data can be used to assess the complexity or readability of the content.\n\n## Histogram of Word Counts\n\nThis code segment loads text data, calculates word and character counts, and visualizes the distribution of word counts across documents. The histogram of word counts allows us to assess the verbosity or conciseness of the entries in the dataset.\n\n```{python}\nimport pandas as pd\nimport plotly.express as px\n\n# Load the dataset\ndata = pd.read_csv('main.csv')\n\n# Assuming the main text is in a column named 'cleaned'\n# Calculate word count and character count\ndata['word_count'] = data['cleaned'].apply(lambda x: len(str(x).split()))\ndata['char_count'] = data['cleaned'].apply(lambda x: len(str(x)))\n\n# Plotting histograms using Plotly Express\nfig_word_count = px.histogram(data, x='word_count',\n                              title='Histogram of Word Counts',\n                              labels={'word_count': 'Word Count'},\n                              color_discrete_sequence=['skyblue'],\n                              template='plotly_white',\n                              nbins=30)\nfig_word_count.update_layout(bargap=0)\nfig_word_count.show()\n\n```\n\n## Histogram of Character Counts\n\nThis code generates a histogram to visualize the distribution of character counts in the dataset. The visualization helps identify the common length of entries and any outliers, using a clear and concise histogram format.\n\n```{python}\n\nfig_char_count = px.histogram(data, x='char_count',\n                              title='Histogram of Character Counts',\n                              labels={'char_count': 'Character Count'},\n                              color_discrete_sequence=['lightgreen'],\n                              template='plotly_white',\n                              nbins=30)\nfig_char_count.update_layout(bargap=0)\nfig_char_count.show()\n```\n\nPOS Tag Frequencies\nNoun and Verb Tags: High frequency of nouns and verbs highlights a descriptive or action-oriented language style in the dataset, which could be pivotal for natural language processing applications like topic modeling or sentiment analysis.\n\nAdjective and Adverb Tags: Lower frequencies suggest a more factual or straightforward reporting style rather than descriptive or evaluative, which might influence the type of content produced.\n\n## Visualization of POS Tag Frequencies\n\nThis script loads textual data, utilizes the NLTK library to extract and count Part-of-Speech tags, and generates histograms for each POS tag type to analyze their frequencies. The visualizations offer insights into the linguistic structure of the texts.\n\n```{python}\nimport pandas as pd\nimport nltk\nfrom nltk import pos_tag, word_tokenize\nfrom collections import Counter\nimport plotly.express as px\n\n# Ensure necessary resources are downloaded\nnltk.download('averaged_perceptron_tagger')\nnltk.download('punkt')\n\n# Load the dataset\ndata = pd.read_csv('main.csv')\n\ndef get_pos_tags(texts, tagset='universal'):\n    df_list = []  # List to store each row DataFrame\n    # Iterate over each text item\n    for text in texts:\n        pos_tags = Counter([tag for _, tag in pos_tag(word_tokenize(text), tagset=tagset)])\n        # Create a DataFrame for current text's POS tags and add to list\n        df_list.append(pd.DataFrame([pos_tags]))\n    # Concatenate all DataFrames in the list into a single DataFrame\n    df = pd.concat(df_list, ignore_index=True)\n    df = df.fillna(0).astype(int)\n    return df\n\n# Extract POS tags for the 'cleaned' column\ndf_tags = get_pos_tags(data['cleaned'])\n\n# Plotting each POS tag frequency using Plotly\ndef plot_pos_histograms(df):\n    for column in df.columns:\n        \n        fig = px.histogram(df, x=column, title=f'Histogram of {column} Tags',\n                           labels={column: f'Count of {column}'}, \n                           template='plotly_white', nbins=8)\n        fig.update_traces(marker_color='turquoise', marker_line_width=1.5)\n        fig.update_layout(bargap=0)  # Update bargap to 0 for no gaps\n        \n        fig.show()\n\nplot_pos_histograms(df_tags)\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"09_summary_stats.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","theme":"cosmo","title":"9: Summary statistics"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}