{"title":"4: Data enrichment","markdown":{"yaml":{"title":"4: Data enrichment"},"headingText":"Load your data","containsRefs":false,"markdown":"\nPrimarily, we enrich our data by obtaining certain metrics from the current data.\n\nOur dataset is enhanced by adding additional information obtained from the existing data.\n\nText Summarization: For each article in our dataset, we utilize an LLM (Language Model) based text summarization method. This method condenses the content of each article into a concise summary consisting of two sentences. The resulting summaries are stored in a new column named \"article_summary\".\n\nSentiment Analysis: We employ LLMs to analyze the sentiment expressed in both the news headlines and the article summaries.\n  -Sentiment Categories: The sentiment analysis categorizes the sentiment into three main categories: \"Positive\", \"Negative\", and \"Neutral\".\n  -Storing Results: The sentiment analysis results for the article summaries are stored in new columns named \"article_summary_sentiment\", while the sentiment analysis results for the headlines are stored in new columns named \"headline_sentiment\".\n\nEmotion Analysis: Similarly, we utilize LLMs to analyze the emotions conveyed in both the news headlines and the article summaries.\n  -Emotion Classes: The emotion analysis classifies emotions into six distinct classes: \"Anger\", \"Sadness\", \"Joy\", \"Surprise\", \"Love\", and \"Disgust\".\n  -Storing Results: The emotion analysis results for the article summaries are stored in new columns named \"article_summary_emotion\", while the emotion analysis results for the headlines are stored in new columns named \"headline_emotion\".\n\nBy performing text summarization, sentiment analysis, and emotion analysis using LLMs, we enrich our dataset with valuable insights into the sentiments and emotions conveyed in the news headlines and article summaries. These enriched features provide a deeper understanding of the content and help facilitate further analysis and interpretation of the data.\n\n```python\nfrom transformers import pipeline\nimport pandas as pd\n\ndf = pd.read_csv('/content/cleaned_and_filtered.csv')\n\n# Load the sentiment and emotion pipelines\nsentiment_analysis = pipeline(\"sentiment-analysis\", model=\"cardiffnlp/twitter-roberta-base-sentiment\", device=0)  # device -1 for CPU\nemotion_analysis = pipeline(\"text-classification\", model=\"bhadresh-savani/distilbert-base-uncased-emotion\", device=0)\n\n# Function to apply the model in batches\ndef apply_model_in_batches(model, texts, batch_size=100):\n    results = []\n    for i in range(0, len(texts), batch_size):\n        batch = texts[i:i + batch_size]\n        results.extend(model(batch))\n    return results\n\n# Apply sentiment analysis in batches\nsentiment_results = apply_model_in_batches(sentiment_analysis, df['TITLE'].tolist())\ndf['sentiment'] = [result['label'] for result in sentiment_results]\ndf['sentiment_score'] = [result['score'] for result in sentiment_results]\n\n# Apply emotion analysis in batches\nemotion_results = apply_model_in_batches(emotion_analysis, df['TITLE'].tolist())\ndf['emotion'] = [result['label'] for result in emotion_results]\ndf['emotion_score'] = [result['score'] for result in emotion_results]\n\ndef label_to_sentiment(label):\n    mapping = {\n        'LABEL_0': 'negative',\n        'LABEL_1': 'neutral',\n        'LABEL_2': 'positive'\n    }\n    return mapping.get(label, 'unknown')  # Return 'unknown' if the label is not recognized\n\n# Apply the function to the 'sentiment' column\ndf['sentiment'] = df['sentiment'].apply(label_to_sentiment)\n\n# Optionally save the updated DataFrame back to a CSV\ndf.to_csv('main.csv', index=False)\n\n# Print the head of the DataFrame to verify changes\n\n```\n\n```{python}\nimport pandas as pd\ndf=pd.read_csv('main.csv')\ndf.head()\n```\n","srcMarkdownNoYaml":"\nPrimarily, we enrich our data by obtaining certain metrics from the current data.\n\nOur dataset is enhanced by adding additional information obtained from the existing data.\n\nText Summarization: For each article in our dataset, we utilize an LLM (Language Model) based text summarization method. This method condenses the content of each article into a concise summary consisting of two sentences. The resulting summaries are stored in a new column named \"article_summary\".\n\nSentiment Analysis: We employ LLMs to analyze the sentiment expressed in both the news headlines and the article summaries.\n  -Sentiment Categories: The sentiment analysis categorizes the sentiment into three main categories: \"Positive\", \"Negative\", and \"Neutral\".\n  -Storing Results: The sentiment analysis results for the article summaries are stored in new columns named \"article_summary_sentiment\", while the sentiment analysis results for the headlines are stored in new columns named \"headline_sentiment\".\n\nEmotion Analysis: Similarly, we utilize LLMs to analyze the emotions conveyed in both the news headlines and the article summaries.\n  -Emotion Classes: The emotion analysis classifies emotions into six distinct classes: \"Anger\", \"Sadness\", \"Joy\", \"Surprise\", \"Love\", and \"Disgust\".\n  -Storing Results: The emotion analysis results for the article summaries are stored in new columns named \"article_summary_emotion\", while the emotion analysis results for the headlines are stored in new columns named \"headline_emotion\".\n\nBy performing text summarization, sentiment analysis, and emotion analysis using LLMs, we enrich our dataset with valuable insights into the sentiments and emotions conveyed in the news headlines and article summaries. These enriched features provide a deeper understanding of the content and help facilitate further analysis and interpretation of the data.\n\n```python\nfrom transformers import pipeline\nimport pandas as pd\n\n# Load your data\ndf = pd.read_csv('/content/cleaned_and_filtered.csv')\n\n# Load the sentiment and emotion pipelines\nsentiment_analysis = pipeline(\"sentiment-analysis\", model=\"cardiffnlp/twitter-roberta-base-sentiment\", device=0)  # device -1 for CPU\nemotion_analysis = pipeline(\"text-classification\", model=\"bhadresh-savani/distilbert-base-uncased-emotion\", device=0)\n\n# Function to apply the model in batches\ndef apply_model_in_batches(model, texts, batch_size=100):\n    results = []\n    for i in range(0, len(texts), batch_size):\n        batch = texts[i:i + batch_size]\n        results.extend(model(batch))\n    return results\n\n# Apply sentiment analysis in batches\nsentiment_results = apply_model_in_batches(sentiment_analysis, df['TITLE'].tolist())\ndf['sentiment'] = [result['label'] for result in sentiment_results]\ndf['sentiment_score'] = [result['score'] for result in sentiment_results]\n\n# Apply emotion analysis in batches\nemotion_results = apply_model_in_batches(emotion_analysis, df['TITLE'].tolist())\ndf['emotion'] = [result['label'] for result in emotion_results]\ndf['emotion_score'] = [result['score'] for result in emotion_results]\n\ndef label_to_sentiment(label):\n    mapping = {\n        'LABEL_0': 'negative',\n        'LABEL_1': 'neutral',\n        'LABEL_2': 'positive'\n    }\n    return mapping.get(label, 'unknown')  # Return 'unknown' if the label is not recognized\n\n# Apply the function to the 'sentiment' column\ndf['sentiment'] = df['sentiment'].apply(label_to_sentiment)\n\n# Optionally save the updated DataFrame back to a CSV\ndf.to_csv('main.csv', index=False)\n\n# Print the head of the DataFrame to verify changes\n\n```\n\n```{python}\nimport pandas as pd\ndf=pd.read_csv('main.csv')\ndf.head()\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"04_enrichment.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","theme":"cosmo","title":"4: Data enrichment"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}