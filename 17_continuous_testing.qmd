---
title: "17: cont. testing"
---
In our GitHub Actions workflow, we've set up a comprehensive testing sequence to ensure code quality and functionality with each push to the main branch or upon manual invocation. After setting up the environment with Python 3.11, we upgrade pip and install necessary dependencies from requirements.txt. This is followed by installing and pulling files with Git LFS, essential for handling large data assets involved in our tests. Finally, we execute our test suite using pytest, allowing us to catch any issues early and maintain high standards of code reliability.

```yaml
name: Publish Website

on:
  workflow_dispatch:
  push:
    branches: [main]  # Ensures it triggers on push to the main branch
  workflow_call:  # Allows this workflow to be called from other workflows

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Ensures the workflow has permissions to write to the repo

    steps:
      - name: Check out this repo
        uses: actions/checkout@v4  # Checks out the current repository

      - name: Setup typst
        uses: typst-community/setup-typst@v3  # Setup Typst environment

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"  # Setup Python environment
      - name: Install all necessary packages
        run: python -m pip install --upgrade pip
             pip install -r requirements.txt
             

      - name: Install Git LFS
        run: |
          sudo apt-get update
          sudo apt-get install git-lfs
          git lfs install

      - name: Pull LFS files
        run: git lfs pull

      - name: List files in the repository
        run: ls -lah

      - name: Run the testing script
        run: pytest 
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2  # Setup Quarto environment

      - name: Render and Publish
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages  # Specifies the publishing target as GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Provides the GitHub token for authentication
```

* * *
